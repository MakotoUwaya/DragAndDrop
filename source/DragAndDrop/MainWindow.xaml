<controls:MetroWindow x:Class="DragAndDrop.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                      xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                      xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
                      xmlns:local="clr-namespace:DragAndDrop"
                      xmlns:loadin="clr-namespace:LoadingIndicators.WPF;assembly=LoadingIndicators.WPF"
                      xmlns:model="clr-namespace:DragAndDrop.Model"
                      mc:Ignorable="d"
                      ShowIconOnTitleBar="True" SaveWindowPosition="True"
                      GlowBrush="{DynamicResource AccentColorBrush}"
                      ResizeMode="CanResizeWithGrip" AllowDrop="True" PreviewDragOver="MetroWindow_PreviewDragOver" Drop="MetroWindow_Drop"
                      Title="Drag And Drop" Height="600" Width="800" WindowStartupLocation="CenterScreen"
                      x:ClassModifier="internal">

    <controls:MetroWindow.DataContext>
        <local:MainWindowViewModel />
    </controls:MetroWindow.DataContext>

    <controls:MetroWindow.RightWindowCommands>
        <controls:WindowCommands>
            <Button Command="{Binding SettingCommand}">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="20"
                               Height="20"
                               Fill="{Binding RelativeSource={RelativeSource AncestorType=Button}, Path=Foreground}">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Fill" Visual="{StaticResource appbar_settings}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <TextBlock Margin="4,0,0,0"
                               VerticalAlignment="Center"
                               Text="Settings"/>
                </StackPanel>
            </Button>
        </controls:WindowCommands>
    </controls:MetroWindow.RightWindowCommands>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <TabControl Grid.Column="0" Grid.Row="0">
            <TabItem Header="ImageViewer">
                <ListBox ItemsSource="{Binding Path=ImageCards, Mode=OneWay}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>

                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type model:ImageCard}">
                            <materialDesign:Card Width="300" Margin="3" >
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="200" />
                                        <RowDefinition Height="Auto" />
                                    </Grid.RowDefinitions>

                                    <Button Grid.Row="0"
                                            Command="{Binding Path=PreviewImageCommand, Mode=OneTime}" 
                                            Padding="0" Height="330" Width="296" 
                                            HorizontalAlignment="Center" VerticalAlignment="Center" >
                                        <Image Source="{Binding Path=ImageFilePath, Mode=OneTime}" Stretch="UniformToFill" />
                                    </Button>
                                    <StackPanel Grid.Row="1" VerticalAlignment="Center" Margin="5,0,0,0">
                                        <!--<TextBlock TextWrapping="Wrap" FontWeight="Bold" Text="{Binding Path=ImageGuid, Mode=OneTime}" />-->
                                        <TextBlock FontWeight="Bold" Text="{Binding Path=AutoCategory, Mode=OneWay}" />
                                        <TextBlock FontWeight="Bold" Text="{Binding Path=Time, Mode=OneWay}" />
                                        <TextBox FontWeight="Bold" Text="{Binding Path=ManualCategory, Mode=TwoWay}" />
                                    </StackPanel>
                                    <StackPanel HorizontalAlignment="Right" Grid.Row="1" Orientation="Horizontal" Margin="8">
                                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}"
                                                Command="{Binding Path=DataContext.RemoveCardCommand, Mode=OneTime,
                                                        RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ListBox}}}"
                                                CommandParameter="{Binding}"
                                                materialDesign:RippleAssist.IsCentered="True">
                                            <materialDesign:PackIcon Kind="Delete" />
                                        </Button>
                                    </StackPanel>
                                </Grid>
                            </materialDesign:Card>
                        </DataTemplate>
                        <DataTemplate DataType="{x:Type model:AddImageButtonCard}">
                            <materialDesign:Card HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                 Height="260" Width="300" Margin="3">
                                <Button Style="{StaticResource MaterialDesignFloatingActionDarkButton}"
                                        Command="{Binding Path=AddImageCommand, Mode=OneTime}"
                                        CommandParameter="{Binding DataContext, 
                                                    RelativeSource={RelativeSource FindAncestor, AncestorLevel=4, AncestorType={x:Type Grid}}}">
                                    <materialDesign:PackIcon Height="30" Width="30" Kind="PlusCircleOutline" />
                                </Button>
                            </materialDesign:Card>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
            </TabItem>
        </TabControl>

        <loadin:LoadingIndicator Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="10"
                                 SpeedRatio="1.5" IsActive="True" Style="{DynamicResource LoadingIndicatorArcsRingStyle}"/>

        <StatusBar Grid.Column="0" Grid.Row="1" Name="BottomStatusBar" Height="Auto">
            <Grid HorizontalAlignment="Stretch" Width="{Binding Path=ActualWidth, ElementName=BottomStatusBar, Mode=OneWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StatusBarItem Grid.Column="0" Content="{Binding Path=StatusTime, Mode=OneWay}" />
                <StatusBarItem Grid.Column="1" HorizontalAlignment="Right" Margin="5,0,10,0"
                               Content="{Binding Path=ClientVersion, Mode=OneTime}" />
            </Grid>
        </StatusBar>
    </Grid>
</controls:MetroWindow>
